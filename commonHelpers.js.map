{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nlet userSelectedDate;\nlet intervalId = null;\nconst btnRef = document.querySelector('button[data-start]');\nbtnRef.disabled = true;\nconst valueArray = document.querySelectorAll(`.value`);\n\nconst fp = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate - new Date() < 0) {\n      btnRef.disabled = true;\n      alert('Please choose a date in the future');\n    } else {\n      btnRef.disabled = false;\n    }\n  },\n});\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction handleStartTimer() {\n  intervalId = setInterval(() => {\n    const startTime = Date.now();\n\n    const differ = userSelectedDate - startTime;\n    console.log(differ);\n    if (differ <= 1000) {\n      clearInterval(intervalId);\n    }\n    const convertedTime = convertMs(differ);\n\n    valueArray[0].textContent = convertedTime.days.toString().padStart(2, '0');\n    valueArray[1].textContent = convertedTime.hours.toString().padStart(2, '0');\n    valueArray[2].textContent = convertedTime.minutes\n      .toString()\n      .padStart(2, '0');\n    valueArray[3].textContent = convertedTime.seconds\n      .toString()\n      .padStart(2, '0');\n  }, 1000);\n}\n\nbtnRef.addEventListener('click', handleStartTimer);\n\n// const options = {\n//   enableTime: true, доступність вибору часу в календарі\n//   time_24hr: true,\n//   defaultDate: new Date(), початкова дата - сьогоднішня\n//   minuteIncrement: 1, збільшує хвилини на 1 при натисканні стрілки\n//   onClose(selectedDates) {\n//     console.log(selectedDates[0]);\n//   },\n// };\n"],"names":["userSelectedDate","intervalId","btnRef","valueArray","flatpickr","selectedDates","convertMs","ms","days","hours","minutes","seconds","handleStartTimer","startTime","differ","convertedTime"],"mappings":"mFAGA,IAAIA,EACAC,EAAa,KACjB,MAAMC,EAAS,SAAS,cAAc,oBAAoB,EAC1DA,EAAO,SAAW,GAClB,MAAMC,EAAa,SAAS,iBAAiB,QAAQ,EAE1CC,EAAU,mBAAoB,CACvC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5BL,EAAmBK,EAAc,GAC7BL,EAAmB,IAAI,KAAS,GAClCE,EAAO,SAAW,GAClB,MAAM,oCAAoC,GAE1CA,EAAO,SAAW,EAErB,CACH,CAAC,EACD,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,GAAmB,CAC1BX,EAAa,YAAY,IAAM,CAC7B,MAAMY,EAAY,KAAK,MAEjBC,EAASd,EAAmBa,EAClC,QAAQ,IAAIC,CAAM,EACdA,GAAU,KACZ,cAAcb,CAAU,EAE1B,MAAMc,EAAgBT,EAAUQ,CAAM,EAEtCX,EAAW,GAAG,YAAcY,EAAc,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACzEZ,EAAW,GAAG,YAAcY,EAAc,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC1EZ,EAAW,GAAG,YAAcY,EAAc,QACvC,SAAU,EACV,SAAS,EAAG,GAAG,EAClBZ,EAAW,GAAG,YAAcY,EAAc,QACvC,SAAU,EACV,SAAS,EAAG,GAAG,CACnB,EAAE,GAAI,CACT,CAEAb,EAAO,iBAAiB,QAASU,CAAgB"}